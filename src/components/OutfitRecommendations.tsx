
import { useEffect, useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";

interface OutfitRecommendationsProps {
  weather: any;
  wardrobeItems: any[];
  currentOutfit: any;
  setCurrentOutfit: (outfit: any) => void;
}

export const OutfitRecommendations = ({ 
  weather, 
  wardrobeItems, 
  currentOutfit, 
  setCurrentOutfit 
}: OutfitRecommendationsProps) => {
  const [recommendations, setRecommendations] = useState([]);

  useEffect(() => {
    if (weather) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≥–æ–¥—ã
      const outfits = [
        {
          id: 1,
          name: "–î–æ–∂–¥–ª–∏–≤—ã–π –¥–µ–Ω—å",
          description: "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –¥–æ–∂–¥–ª–∏–≤–æ–π –ø–æ–≥–æ–¥—ã",
          items: ["–î–æ–∂–¥–µ–≤–∏–∫", "–î–∂–∏–Ω—Å—ã", "–ë–æ—Ç–∏–Ω–∫–∏"],
          comfort: "–í—ã—Å–æ–∫–∏–π",
          style: "Casual"
        },
        {
          id: 2,
          name: "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è –ø–æ–≥–æ–¥–∞",
          description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–æ –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –¥–æ 15¬∞C",
          items: ["–°–≤–∏—Ç–µ—Ä", "–ë—Ä—é–∫–∏", "–ö—Ä–æ—Å—Å–æ–≤–∫–∏"],
          comfort: "–°—Ä–µ–¥–Ω–∏–π",
          style: "Smart Casual"
        },
        {
          id: 3,
          name: "–û—Ñ–∏—Å–Ω—ã–π —Å—Ç–∏–ª—å",
          description: "–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –ø—Ä–æ—Ö–ª–∞–¥–Ω—É—é –ø–æ–≥–æ–¥—É",
          items: ["–ë–ª—É–∑–∫–∞", "–ü–∏–¥–∂–∞–∫", "–¢—É—Ñ–ª–∏"],
          comfort: "–°—Ä–µ–¥–Ω–∏–π",
          style: "Business"
        }
      ];
      setRecommendations(outfits);
    }
  }, [weather]);

  if (!weather) {
    return (
      <Card className="p-6 bg-white/10 backdrop-blur-lg border-white/20">
        <div className="text-white/60">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...</div>
      </Card>
    );
  }

  return (
    <Card className="p-6 bg-white/10 backdrop-blur-lg border-white/20">
      <h2 className="text-2xl font-bold text-white mb-6">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–æ–≤</h2>
      
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {recommendations.map((outfit) => (
          <Card 
            key={outfit.id} 
            className="p-4 bg-white/10 border-white/20 hover:bg-white/15 transition-all hover-scale cursor-pointer"
            onClick={() => setCurrentOutfit(outfit)}
          >
            <div className="text-center mb-4">
              <div className="w-20 h-20 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-3">
                <span className="text-3xl">üëó</span>
              </div>
              <h3 className="font-semibold text-white mb-2">{outfit.name}</h3>
              <p className="text-white/70 text-sm">{outfit.description}</p>
            </div>
            
            <div className="space-y-2 mb-4">
              {outfit.items.map((item, index) => (
                <Badge key={index} variant="secondary" className="bg-white/20 text-white/80 mr-1">
                  {item}
                </Badge>
              ))}
            </div>
            
            <div className="flex justify-between text-sm">
              <span className="text-white/60">–ö–æ–º—Ñ–æ—Ä—Ç: {outfit.comfort}</span>
              <span className="text-white/60">–°—Ç–∏–ª—å: {outfit.style}</span>
            </div>
            
            <Button 
              className="w-full mt-3 bg-white/20 hover:bg-white/30 text-white border-white/30"
              onClick={(e) => {
                e.stopPropagation();
                setCurrentOutfit(outfit);
              }}
            >
              –í—ã–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑
            </Button>
          </Card>
        ))}
      </div>

      {currentOutfit && (
        <div className="mt-6 p-4 bg-white/20 rounded-lg border border-white/30">
          <h3 className="text-white font-semibold mb-2">–í—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—Ä–∞–∑: {currentOutfit.name}</h3>
          <p className="text-white/80 text-sm">{currentOutfit.description}</p>
        </div>
      )}
    </Card>
  );
};
